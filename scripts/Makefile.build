
PHONY := __build
__build :


include scripts/Makefile.include


# Compile and assemble
# ---------------------------------------------------------------------------
echo_cc = CC      $@
cmd_cc = $(CC) $(CPPFLAGS) $(DIR_CPPFLGAS) $(CPPFLAGS_$(@F)) \
	$(CFLAGS) $(DIR_CFLGAS) $(CFLAGS_$(@F)) -c $< -o $@

# Linking
# ---------------------------------------------------------------------------
echo_ld = LD      $@
cmd_ld = $(CC) $(LDFLAGS) $(DIR_LDFLAGS) $(LDFLAGS_$(@F)) $< \
	$(LIBS) $(LIBS_$(@F)) -o $@

# Linking multi file
# ---------------------------------------------------------------------------
echo_ld_multi = LD      $@
cmd_ld_multi = $(CC) $(LDFLAGS) $(DIR_LDFLAGS) $(LDFLAGS_$(@F)) $^ \
	$(LIBS) $(LIBS_$(@F)) -o $@  #$(filter-out FORCE, $^)

define rule-multi
$(foreach m, $(notdir $1), \
	$(eval $(dir)/$m : \
	$(addprefix $(dir)/, $($(m)-objs))))
endef

# Compile libs
# ---------------------------------------------------------------------------
echo_lib_obj = LD      $@
cmd_lib_obj = $(LD) -r $^ -o $@  #$(filter-out FORCE, $^)

# Archive
# ---------------------------------------------------------------------------
echo_ar = AR      $@
cmd_ar = $(AR) rcsPT $@ $^ #$(filter-out FORCE, $^)

# Share library
# ---------------------------------------------------------------------------
echo_shlib = LLD     $@
cmd_shlib = $(CC) -shared $(SHLIB_FLAGS) $^ \
	$(SHLIB_LIBS) -o $@ #$(filter-out FORCE, $^)

# Dependency
# ---------------------------------------------------------------------------
echo_deps = GEN     $@
cmd_deps = $(CC) -MM $< > $@


__build : $(subdir) $(curlib) $(arlib) $(shlib) $(single) $(multi)
	@:

$(subdir) :
	$(Q)$(MAKE) $(build)=$@

$(dir)/%.o : $(src)/%.c
	$(call cmd,cc)

$(sublib) : $(subdir)
	@:

$(dir)/lib%.o : $(lib) $(sublib)
	$(call cmd,lib_obj)

$(dir)/%.a : $(src)/%.o
	$(call cmd,ar)

$(dir)/%.so : $(src)/%.o
	$(call cmd,shlib)

$(dir)/% : $(src)/%.o
	$(call cmd,ld)

$(multi) :
	$(call cmd,ld_multi)
$(call rule-multi, $(multi))

$(dir)/%.d : $(src)/%.c
	$(call cmd,deps)
sinclude $(lib_deps)
sinclude $(obj_deps)


.FORCE :
.SECONDARY :


PHONY += $(subdir) FORCE

.PHONY: $(PHONY)
