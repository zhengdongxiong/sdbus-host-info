
src := $(dst)

obj    :=
objdir :=
deps   :=
single :=
multi  :=
lib    :=
curlib :=
sublib :=
libdir :=
arlib  :=
shlib  :=

# Include subdir Makefile
# ===========================================================================
make_dir  :=
make_file := $(src)/Makefile
sinclude $(make_file)

# Object variables
# ===========================================================================
objdir := $(patsubst %/, %, $(objdir))
libdir := $(patsubst %/, %, $(libdir))

ifneq ($(lib)$(libdir),)
curlib := lib$(libname).o
sublib := $(foreach m, $(libdir), $(m)/$(curlib))
arlib  := lib$(libname).a
#shlib := lib$(libname).so
endif #ifneq ($(lib)$(sublib),)

multi  := $(foreach m, $(obj), $(if $($(m:%.o=%)-y), $(m)))
single := $(filter-out $(multi), $(obj))

obj    := $(single) $(foreach m, $(multi), $($(m:%.o=%)-y))
deps   := $(obj:%.o=%.d) $(lib:%.o=%.d)
single := $(patsubst %.o, %, $(single))
multi  := $(patsubst %.o, %, $(multi))

# Add subdir path
# ===========================================================================
obj    := $(addprefix $(dst)/, $(obj))
objdir := $(addprefix $(dst)/, $(objdir))
deps   := $(addprefix $(dst)/, $(deps))
single := $(addprefix $(dst)/, $(single))
multi  := $(addprefix $(dst)/, $(multi))
lib    := $(addprefix $(dst)/, $(lib))
libdir := $(addprefix $(dst)/, $(libdir))
curlib := $(addprefix $(dst)/, $(curlib))
sublib := $(addprefix $(dst)/, $(sublib))
arlib  := $(addprefix $(dst)/, $(arlib))
shlib  := $(addprefix $(dst)/, $(shlib))

###
# Shorthand for $(Q)$(MAKE) -f scripts/Makefile.build dst=
# Usage:
# $(Q)$(MAKE) $(build)=dst
build := -f scripts/Makefile.build dst

###
# Shorthand for $(Q)$(MAKE) -f scripts/Makefile.clean dst=
# Usage:
# $(Q)$(MAKE) $(clean)=dst
clean := -f scripts/Makefile.clean dst

###
# Shorthand for $(Q)$(MAKE) -f scripts/Makefile.genjs dst=
# Usage:
# $(Q)$(MAKE) $(genjs)=dst
genjs := -f scripts/Makefile.genjs dst

# Commads
# ===========================================================================
include scripts/Makefile.cmd
